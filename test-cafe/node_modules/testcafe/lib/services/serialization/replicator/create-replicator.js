"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const replicator_1 = __importDefault(require("replicator"));
const custom_error_transform_1 = __importDefault(require("./custom-error-transform"));
const DEFAULT_ERROR_TRANSFORM_TYPE = '[[Error]]';
function getDefaultErrorTransform(replicator) {
    return replicator.transforms.find(transform => {
        return transform.type === DEFAULT_ERROR_TRANSFORM_TYPE;
    });
}
function default_1() {
    // We need to move the 'CustomErrorTransform' transform before the default transform for the 'Error' class
    // to ensure the correct transformation order:
    // TestCafe's and custom errors will be transformed by CustomErrorTransform, built-in errors - by the built-in replicator's transformer.
    const replicator = new replicator_1.default();
    const defaultErrorTransform = getDefaultErrorTransform(replicator);
    const customErrorTransform = new custom_error_transform_1.default();
    return replicator
        .removeTransforms(defaultErrorTransform)
        .addTransforms([customErrorTransform, defaultErrorTransform]);
}
exports.default = default_1;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3JlYXRlLXJlcGxpY2F0b3IuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvc2VydmljZXMvc2VyaWFsaXphdGlvbi9yZXBsaWNhdG9yL2NyZWF0ZS1yZXBsaWNhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsNERBQW1EO0FBQ25ELHNGQUE0RDtBQUU1RCxNQUFNLDRCQUE0QixHQUFHLFdBQVcsQ0FBQztBQUVqRCxTQUFTLHdCQUF3QixDQUFFLFVBQXNCO0lBQ3JELE9BQU8sVUFBVSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEVBQUU7UUFDMUMsT0FBTyxTQUFTLENBQUMsSUFBSSxLQUFLLDRCQUE0QixDQUFDO0lBQzNELENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQUVEO0lBQ0ksMEdBQTBHO0lBQzFHLDhDQUE4QztJQUM5Qyx3SUFBd0k7SUFDeEksTUFBTSxVQUFVLEdBQWMsSUFBSSxvQkFBVSxFQUFFLENBQUM7SUFDL0MsTUFBTSxxQkFBcUIsR0FBRyx3QkFBd0IsQ0FBQyxVQUFVLENBQWMsQ0FBQztJQUNoRixNQUFNLG9CQUFvQixHQUFJLElBQUksZ0NBQW9CLEVBQUUsQ0FBQztJQUV6RCxPQUFPLFVBQVU7U0FDWixnQkFBZ0IsQ0FBQyxxQkFBcUIsQ0FBQztTQUN2QyxhQUFhLENBQUMsQ0FBQyxvQkFBb0IsRUFBRSxxQkFBcUIsQ0FBQyxDQUFDLENBQUM7QUFDdEUsQ0FBQztBQVhELDRCQVdDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlcGxpY2F0b3IsIHsgVHJhbnNmb3JtIH0gZnJvbSAncmVwbGljYXRvcic7XG5pbXBvcnQgQ3VzdG9tRXJyb3JUcmFuc2Zvcm0gZnJvbSAnLi9jdXN0b20tZXJyb3ItdHJhbnNmb3JtJztcblxuY29uc3QgREVGQVVMVF9FUlJPUl9UUkFOU0ZPUk1fVFlQRSA9ICdbW0Vycm9yXV0nO1xuXG5mdW5jdGlvbiBnZXREZWZhdWx0RXJyb3JUcmFuc2Zvcm0gKHJlcGxpY2F0b3I6IFJlcGxpY2F0b3IpOiBUcmFuc2Zvcm0gfCB1bmRlZmluZWQge1xuICAgIHJldHVybiByZXBsaWNhdG9yLnRyYW5zZm9ybXMuZmluZCh0cmFuc2Zvcm0gPT4ge1xuICAgICAgICByZXR1cm4gdHJhbnNmb3JtLnR5cGUgPT09IERFRkFVTFRfRVJST1JfVFJBTlNGT1JNX1RZUEU7XG4gICAgfSk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uICgpOiBSZXBsaWNhdG9yIHtcbiAgICAvLyBXZSBuZWVkIHRvIG1vdmUgdGhlICdDdXN0b21FcnJvclRyYW5zZm9ybScgdHJhbnNmb3JtIGJlZm9yZSB0aGUgZGVmYXVsdCB0cmFuc2Zvcm0gZm9yIHRoZSAnRXJyb3InIGNsYXNzXG4gICAgLy8gdG8gZW5zdXJlIHRoZSBjb3JyZWN0IHRyYW5zZm9ybWF0aW9uIG9yZGVyOlxuICAgIC8vIFRlc3RDYWZlJ3MgYW5kIGN1c3RvbSBlcnJvcnMgd2lsbCBiZSB0cmFuc2Zvcm1lZCBieSBDdXN0b21FcnJvclRyYW5zZm9ybSwgYnVpbHQtaW4gZXJyb3JzIC0gYnkgdGhlIGJ1aWx0LWluIHJlcGxpY2F0b3IncyB0cmFuc2Zvcm1lci5cbiAgICBjb25zdCByZXBsaWNhdG9yICAgICAgICAgICAgPSBuZXcgUmVwbGljYXRvcigpO1xuICAgIGNvbnN0IGRlZmF1bHRFcnJvclRyYW5zZm9ybSA9IGdldERlZmF1bHRFcnJvclRyYW5zZm9ybShyZXBsaWNhdG9yKSBhcyBUcmFuc2Zvcm07XG4gICAgY29uc3QgY3VzdG9tRXJyb3JUcmFuc2Zvcm0gID0gbmV3IEN1c3RvbUVycm9yVHJhbnNmb3JtKCk7XG5cbiAgICByZXR1cm4gcmVwbGljYXRvclxuICAgICAgICAucmVtb3ZlVHJhbnNmb3JtcyhkZWZhdWx0RXJyb3JUcmFuc2Zvcm0pXG4gICAgICAgIC5hZGRUcmFuc2Zvcm1zKFtjdXN0b21FcnJvclRyYW5zZm9ybSwgZGVmYXVsdEVycm9yVHJhbnNmb3JtXSk7XG59XG4iXX0=